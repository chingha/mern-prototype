version: '3.8'

services:
  mongodb:
    image: mongo:5.0.2
    restart: unless-stopped
    env_file: ./.env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGODB_USER
      - MONGO_INITDB_ROOT_PASSWORD=$MONGODB_PASSWORD
    ports:
      - $MONGODB_LOCAL_PORT:$MONGODB_DOCKER_PORT
    volumes:
      - db:/data/db
    networks:
      - backend
  
  server:
    depends_on:
      - mongodb
    build: ./server
    restart: unless-stopped
    env_file: ./.env
    ports:
      - $NODE_LOCAL_PORT:$NODE_DOCKER_PORT
    environment:
      - DB_HOST=mongodb
      - DB_USER=$MONGODB_USER
      - DB_PASSWORD=$MONGODB_PASSWORD
      - DB_NAME=$MONGODB_DATABASE
      - DB_PORT=$MONGODB_DOCKER_PORT
      # - CLIENT_ORIGIN=$CLIENT_ORIGIN
    networks:
      - backend
      - frontend

  client:
    depends_on:
      - server
    build:
      context: ./client
      # args:
      #   - REACT_APP_API_BASE_URL=$CLIENT_API_BASE_URL
    ports:
      - $REACT_LOCAL_PORT:$REACT_DOCKER_PORT
    networks:
      - frontend  

volumes: 
  db:

networks:
  backend:
  frontend:


# version: '3.7'

# services:
#   server:
#     build:
#       context: ./server
#       dockerfile: dockerfile#     image: myapp-server
#     container_name: myapp-node-server
#     # command: /usr/src/app/node_modules/.bin/node server.js
#     volumes:
#       - ./server/:/usr/src/app
#       - /usr/src/app/node_modules
#     ports:
#       - "4001:3001"
#     depends_on:
#       - mongo
#     env_file: ./server/.env
#     environment:
#       - NODE_ENV=development
#     networks:
#       - app-network
#   mongo:
#     image: mongo
#     volumes:
#       - data-volume:/data/db
#     ports:
#       - "27017:27017"
#     networks:
#       - app-network
#   client:
#     build:
#       context: ./client
#       dockerfile: dockerfile
#     image: myapp-client
#     container_name: myapp-react-client
#     command: npm start
#     volumes:
#       - ./client/:/usr/app
#       - /usr/app/node_modules
#     depends_on:
#       - server
#     ports:
#       - "3000:3000"
#     networks:
#       - app-network

# networks:
#     app-network:
#         driver: bridge

# volumes:
#     data-volume:
#     node_modules:
#     web-root:
#       driver: local